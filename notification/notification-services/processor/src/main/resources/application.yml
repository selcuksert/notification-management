debug: true
logging:
  #file:
    #name: app.log
  level:
    root: info
    org.apache.kafka: info
spring:
  main:
    web-application-type: none
  application:
    name: consent-processor
  cloud:
    stream:
      function:
        definition: sinkMdmData, processConsentData
      bindings:
        sinkMdmData-in-0:
          destination: mdmbridge
          consumer:
            use-native-decoding: true
        processConsentData-in-0:
          destination: consent
          consumer:
            use-native-decoding: true
        processConsentData-out-0:
          destination: notification
          producer:
            use-native-encoding: true
      kafka:
        streams:
          binder:
            functions:
              sinkMdmData:
                application-id: ${spring.application.name}-sinkMdmData
              processConsentData:
                application-id: ${spring.application.name}-processConsentData
            applicationId: ${spring.application.name}-stream
            brokers:
            - localhost:19093
            - localhost:19094
            configuration:
              schema.registry.url: http://localhost:8081              
              #default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
              processing.guarantee: exactly_once
            autoCreateTopics: false
            autoAddPartitions: false
          bindings:
            sinkMdmData-in-0.consumer.keySerde: io.confluent.kafka.streams.serdes.avro.PrimitiveAvroSerde
            sinkMdmData-in-0.consumer.valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
            processConsentData-in-0.consumer.keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
            processConsentData-in-0.consumer.valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde
            processConsentData-out-0.producer.keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
            processConsentData-out-0.producer.valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde